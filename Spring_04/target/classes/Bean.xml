<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.nbsp"></context:component-scan>

    <bean id="text" class="com.nbsp.Service.Text01Impl"></bean>


    <!-- 配置数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!--连接数据库的必备信息-->
        <property name="driverClass" value="com.mysql.jdbc.Driver"></property>
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/eesy"></property>
        <property name="user" value="root"></property>
        <property name="password" value="root"></property>
    </bean>


    <!--<bean id="queryRunner" class="org.apache.commons.dbutils.QueryRunner">
        <constructor-arg name="ds" ref="dataSource"></constructor-arg>
    </bean>-->

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg  ref="dataSource"></constructor-arg>
    </bean>

    <bean id="transacyion" class="com.nbsp.Domain.Transaction">

    </bean>

    <!--<bean id="connection" class="com.nbsp.Domain.ConnectionUtils">
        <property name="dataSource" ref="dataSource"></property>
    </bean>-->



    <aop:config>
        <aop:pointcut id="df1" expression="execution(* com.nbsp.Service.Text01Impl.*(..))"></aop:pointcut>
        <aop:aspect id="config" ref="transacyion">
            <!--<aop:before method="beginTransaction" pointcut-ref="df1"></aop:before>
            <aop:after-returning method="commit" pointcut-ref="df1"></aop:after-returning>
            <aop:after-throwing method="rollback" pointcut-ref="df1"></aop:after-throwing>
            <aop:after method="release" pointcut-ref="df1"></aop:after>-->
            <!-- 环绕通知 -->
            <aop:around method="around" pointcut-ref="df1"></aop:around>
        </aop:aspect>
    </aop:config>

    </beans>